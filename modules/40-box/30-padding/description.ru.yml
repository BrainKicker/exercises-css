---

name: Внутренние отступы
theory: |
  Взгляните на пример из прошлого урока. Мы вывели текст на сером фоне, при этом он «приклеен» к блоку, в котором размещается.

  <div class="hexlet-basics-example" style="background-color: #cccccc;">
      Текст, который будет выведен на сером фоне
  </div>

  Для того, чтобы дать больше пространства тексту, используются внутренние отступы. Внутренний отступ указывается с помощью правила `padding`, которое может принимать 4 значения:

  * отступ сверху;
  * отступ справа;
  * отступ снизу;
  * отступ слева.

  ```html
  <style>
    .gray-background {
      background-color: #cccccc;
      padding: 20px 20px 20px 20px;
    }
  </style>

  <div class="gray-background">
      Текст, который будет выведен на сером фоне с отступами по 20 пикселей с каждой стороны.
  </div>
  ```

  <div class="hexlet-basics-example" style="background-color: #cccccc; padding: 20px;">
      Текст, который будет выведен на сером фоне с отступами по 20 пикселей с каждой стороны.
  </div>

  Помимо такой записи для удобства существуют сокращённые записи этих правил:

  * Если указать два значения, то первое будет использоваться для отступов по вертикали (сверху и снизу), а второе по горизонтали (справа и слева).
  * Если указать только одно значение, то оно будет использовано одновременно для всех сторон.
  * Если указать три значения, то они будут использоваться для отступа сверху, по горизонтали и снизу.

  Таким образом можно пример выше записать следующим образом:

  ```html
  <style>
    .gray-background {
      background-color: #cccccc;
      padding: 20px;
    }
  </style>

  <div class="gray-background">
      Текст, который будет выведен на сером фоне с отступами по 20 пикселей с каждой стороны.
  </div>
  ```

instructions: |
  Добавьте в редактор параграф с классом `padding` и установите внутренние отступы:
  * 10 пикселей сверху,
  * 15 пикселей снизу,
  * 20 пикселей слева и справа.

  Используйте следующий текст для параграфа:

  ```
  Что делает верстальщик? Создаёт страницы с помощью HTML и CSS. Умеет пользоваться возможностями модулей Flex и Grid. Использует препроцессор SASS, шаблонизатор Pug и собирает проекты с помощью Gulp. Следит за доступностью сайта, создавая семантически правильную разметку. Создаёт компоненты и утилиты на Bootstrap. Верстает адаптивные проекты.
  ```

  Сам текст не имеет значения и не проверяется. Основная цель — добавить текст, который будет расположен в несколько строк. Это поможет корректно увидеть левые и правые отступы.

  Добавьте черный фон к параграфу и белый цвет текста. Попробуйте различные значения свойства padding для того, чтобы увидеть как это влияет на блок.

  Стили запишите в теге `style`.
