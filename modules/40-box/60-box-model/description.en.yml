---

name: Box Model
theory: |

  When using some properties, such as `border` and `padding`, you may notice that it affects the final block size. And it really does. This is how browsers calculate the final block size on the page:

  ![Box Model](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/The_box_model/box-model.png)

  That is, the final size is formed not only by the properties `height` and `width`, but by many other properties:

  * `padding` - internal indentation
  * `border` - borders
  * `margin` - outer limits

  It turns out that to determine the final size of the element you must add up the values of all these properties. For example, what will be the width of this block?

  ```css
  .box {
    width: 100px;
    height: 100px;

    padding: 20px;
    margin: 10px;

    border: 1px solid #fff;
  }
  ```

  100px? 120px? 121px? How do I know this value? You have to add up all the values that form the block horizontally:

  * `width`
  * `padding-left`/`padding-right`
  * `border-left`/`border-right`
  * `margin-left`/`margin-right`

  It turns out that the final width of the element on the page is `100px + 20px + 20px + 1px + 1px + 10px + 10px` which equals `162px`.

  This behavior is called the _box model_. It describes the relationship between properties and the finite size of an element. According to this model, browsers "draw" a block, layering rules on top of each other before displaying the element on the page.

  This model is worth remembering, because when working with CSS it is important to understand where and how the browser "draws" the block, and how it will affect its height and width.

  But agree that when you set the `width` and `height` properties you expect those exact values. Is it possible to change the behavior of the box model? Yes! For this use the property `box-sizing`, which takes the following values:

  * `content-box` - default value. It works as described in the lesson
  * `border-box` - the values of the border and internal indentation do not increase the element, and "eat up" the space in the content, that is, the properties will not affect the height and width. If a fixed value is set, it will remain so, but there will be less space for the content inside

instructions: |
  Add to the editor `div` with the class `card-hello` and set the following rules:

  * background color: `#fa7268`.
  * text color: `#ffffffff`.
  * block width: 230 pixels
  * block height: 25 pixels
  * inside indent: 20 pixels
  * outer spacing: 10 pixels
  * border: 2 pixels wide, solid. Color `#9c27b0`
  * font size: 20 pixels

  Write the styles in the tag `<style>`
