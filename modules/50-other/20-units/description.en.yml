---

name: Units
theory: |
  Throughout the course, pixels, the smallest element of the screen that outputs color, have been used as units of measurement. A lot of pixels (and there are a lot of pixels in a screen) form the picture you're looking at. They have been used to indicate font size, element height and width, internal and external indentation, line spacing, and so on.

  Pixels are the **absolute** unit of measure in CSS. So what does that mean? It means that no matter what screen size you specify, the value specified in pixels will be retained. If you specify a 30-pixel indent, it will be the same on your phone, a 102 inch TV, and a microwave at home.

  On the one hand this is good, because you can be sure that on different devices all sizes will remain the same. On the same note, there is also a problem. Imagine text with a font size of 12 pixels. It will read fine on an average screen, but using it on a TV or smartphone will cause the text to be too small to read comfortably because the devices have different screen sizes. If the screen is only 50 pixels, such text will become incredibly large because it will take up most of the screen

  In addition to pixels, there are other absolute units of measurement:

  * centimeters
  * millimeters
  * inches
  * points

  Although they are not often used, they can be useful in page makeup for printing. Websites only use pixels.

  As opposed to absolute units of measurement, there are **relative** units. By their name, it is clear that the size of such an element is not fixed, but is calculated relative to something. In the case of web pages, this "something" is the size of the font. Why the font? Imagine that you, as a user, increase the size of the font on the site for their own convenience. If the indentation, width, height will not be tied to the size of the text, then such text will go beyond the block. And the text - the basis of any page on the Internet.

  One of the relative units of measurement are percentages. They are counted from the font size of the parent element, that is, the element within which they are. For example,

  ```html
  <section class="news">
    <h2>News</h2>
  </section>
  ```

  ```css
  .news {
    font-size: 20px;
  }

  .news h2 {
    font-size: 200%;
  }
  ```

  What size will the second level header be? The correct answer is `40px` since the font size for the `news` section is set to `20px`. In relation to this size and calculated the value of `200%`. It does not matter what other tags there are in which wrappers these news items are located - the size is calculated from the `font-size` value of the `news` element.

  But it is important to remember that `font-size` is an inherited property. If it is not explicitly specified in the `news` element in our example, then, for it, the `font-size` value of the parent will be set. Let's extend the example:

  ```html
  <main>
    <section class="news">
      <h2>News</h2>
    </section>
  </main>
  ```

  ```css
  main {
    font-size: 16px;
  }

  h2 {
    font-size: 200%;
  }
  ```

  What is the size of the second level header? The correct answer is `32px`. If you build a logical chain of font sizes, it looks like this:

  * The `<main>` element has the font size set to `16px`.
  * Element with class `news` has no separate font size indication, so it inherits from `<main>`, which is also `16px`
  * The second level header has a font size of `200%`. The value is set relative to the font size of the parent, that is, the block with the class `.news`. Otherwise it turns out `16px * 2 = 32px`.

  There are several other basic relative units of measurement:

  1. **em**. is defined relative to the font size of the parent element, i.e. `1.5em` will be 50% larger than the base calculated font size of the parent. Very similar to using percent, only specified a little differently
  2. **rem**. determined relative to the font size of the root element, i.e. the `html` tag (default value is 16px)

instructions: |
  Add `<div>` with the class `header`. Set the font size to 22px. Inside `<div>` put a paragraph with the class `offer` and set the font size to 200%. Write the styles in the tag `<style>`

tips:
  - With relative units, you can control not only the size of the font, but also the rest of the properties, which take as a value a number and a unit of measure
