---

name: RGB color model
theory: |

  In studying the courses, we encountered properties whose values are color. Such properties were:

  * `color`
  * `background-color`
  * `border-color`

  The hexadecimal RGB model, which translates as _Red Green Blue_, was used to represent colors. CSS uses two basic entries to represent colors in RGB:

  * Hexadecimal. This is a 6-character entry, divided into three blocks of two values. Each block is responsible for one of the colors: red, green or blue
  * Using the function `rgb(red, green, blue)`. The function accepts three numbers from _0_ to _255_, each of which determines the amount of red, green and blue

  ## Hexadecimal notation

  This entry uses [hexadecimal notation](https://en.wikipedia.org/wiki/Hexadecimal). The record is divided into three blocks of two numbers each:

  1. from `00` to `ff` - amount of red color
  2. from `00` to `ff` - amount of green color
  3. from `00` to `ff` - quantity of blue color

  ```css
  /* White Color */
  color: #ffffff;

  /* Black Color */
  color: #000000;
  ```

  Suppose you want purple for the text. How is it made? To do this, red and blue are mixed. There is no green in purple. So we need the maximum entry in the first and third block. The result is the color `#ff00ff`.

  <div class="hexlet-basics-example my-3" style="color: #ff00ff;">
    Purple text
  </div>

  You can get different variations of this color by adding or reducing the number of compound colors

  ## The rgb function

  The second way to specify a color using the RGB color model is to use the special function `rgb()`. It takes three numbers from _0_ to _255_, where the first number specifies the amount of red, the second the amount of green, and the third the amount of blue. Doesn't that remind you of anything?

  If you think it looks like a hexadecimal system, you'll be right - the idea is exactly the same. Only we write the colors in the numbers we are accustomed to. Otherwise, everything is the same, which means you can create a purple color using the `rgb()` function:

  ```html
  <p class="text">Purple text</p>
  ```

  ```css
  .text {
    color: rgb(255, 0, 255);
  }
  ```

  <div class="hexlet-basics-example my-3" style="color: rgb(255, 0, 255);">
    Purple text
  </div>

  And this is what white and black will look like when using `rgb()`:

  ```css
  /* White Color */
  color: rgb(255, 255, 255);

  /* Black Color */
  color: rgb(0, 0, 0);
  ```

  ## Transparency and the rgba() function

  When you use background colors, you often use not just a color, but also add transparency to it. The RGB color model uses the term _"alpha" channel_ for this purpose. This defines how transparent a color is to be output and is specified by a number from _0_ to _1_, where _0_ is completely transparent and _1_ is completely opaque.

  To use the alpha channel, create function `rgba()` where `a` is `alpha`. Otherwise, everything is exactly the same as we learned earlier. Let's make a semi-transparent purple background:

  ```html
  <div class="background">Block with a semi-transparent purple background</div>
  ```

  ```css
  .background {
    background-color: rgba(255, 0, 255, 0.5);
  }
  ```

  <div class="hexlet-basics-example my-3" style="background-color: rgba(255, 0, 255, 0.5);">
    Block with a semi-transparent purple background
  </div>

instructions: |
  Create a paragraph with the class `background-black-50` and set it to a semi-transparent black background. Use the `rgba()` function. Write styles in the tag `<style>`.
